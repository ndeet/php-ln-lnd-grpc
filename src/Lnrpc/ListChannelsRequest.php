<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: rpc.proto

namespace Lnrpc;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>lnrpc.ListChannelsRequest</code>
 */
class ListChannelsRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>bool active_only = 1;</code>
     */
    private $active_only = false;
    /**
     * Generated from protobuf field <code>bool inactive_only = 2;</code>
     */
    private $inactive_only = false;
    /**
     * Generated from protobuf field <code>bool public_only = 3;</code>
     */
    private $public_only = false;
    /**
     * Generated from protobuf field <code>bool private_only = 4;</code>
     */
    private $private_only = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type bool $active_only
     *     @type bool $inactive_only
     *     @type bool $public_only
     *     @type bool $private_only
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Rpc::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>bool active_only = 1;</code>
     * @return bool
     */
    public function getActiveOnly()
    {
        return $this->active_only;
    }

    /**
     * Generated from protobuf field <code>bool active_only = 1;</code>
     * @param bool $var
     * @return $this
     */
    public function setActiveOnly($var)
    {
        GPBUtil::checkBool($var);
        $this->active_only = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>bool inactive_only = 2;</code>
     * @return bool
     */
    public function getInactiveOnly()
    {
        return $this->inactive_only;
    }

    /**
     * Generated from protobuf field <code>bool inactive_only = 2;</code>
     * @param bool $var
     * @return $this
     */
    public function setInactiveOnly($var)
    {
        GPBUtil::checkBool($var);
        $this->inactive_only = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>bool public_only = 3;</code>
     * @return bool
     */
    public function getPublicOnly()
    {
        return $this->public_only;
    }

    /**
     * Generated from protobuf field <code>bool public_only = 3;</code>
     * @param bool $var
     * @return $this
     */
    public function setPublicOnly($var)
    {
        GPBUtil::checkBool($var);
        $this->public_only = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>bool private_only = 4;</code>
     * @return bool
     */
    public function getPrivateOnly()
    {
        return $this->private_only;
    }

    /**
     * Generated from protobuf field <code>bool private_only = 4;</code>
     * @param bool $var
     * @return $this
     */
    public function setPrivateOnly($var)
    {
        GPBUtil::checkBool($var);
        $this->private_only = $var;

        return $this;
    }

}

