<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: rpc.proto

namespace Lnrpc;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>lnrpc.GenSeedRequest</code>
 */
class GenSeedRequest extends \Google\Protobuf\Internal\Message
{
    /**
     **
     *aezeed_passphrase is an optional user provided passphrase that will be used
     *to encrypt the generated aezeed cipher seed.
     *
     * Generated from protobuf field <code>bytes aezeed_passphrase = 1;</code>
     */
    private $aezeed_passphrase = '';
    /**
     **
     *seed_entropy is an optional 16-bytes generated via CSPRNG. If not
     *specified, then a fresh set of randomness will be used to create the seed.
     *
     * Generated from protobuf field <code>bytes seed_entropy = 2;</code>
     */
    private $seed_entropy = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $aezeed_passphrase
     *          *
     *          aezeed_passphrase is an optional user provided passphrase that will be used
     *          to encrypt the generated aezeed cipher seed.
     *     @type string $seed_entropy
     *          *
     *          seed_entropy is an optional 16-bytes generated via CSPRNG. If not
     *          specified, then a fresh set of randomness will be used to create the seed.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Rpc::initOnce();
        parent::__construct($data);
    }

    /**
     **
     *aezeed_passphrase is an optional user provided passphrase that will be used
     *to encrypt the generated aezeed cipher seed.
     *
     * Generated from protobuf field <code>bytes aezeed_passphrase = 1;</code>
     * @return string
     */
    public function getAezeedPassphrase()
    {
        return $this->aezeed_passphrase;
    }

    /**
     **
     *aezeed_passphrase is an optional user provided passphrase that will be used
     *to encrypt the generated aezeed cipher seed.
     *
     * Generated from protobuf field <code>bytes aezeed_passphrase = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setAezeedPassphrase($var)
    {
        GPBUtil::checkString($var, False);
        $this->aezeed_passphrase = $var;

        return $this;
    }

    /**
     **
     *seed_entropy is an optional 16-bytes generated via CSPRNG. If not
     *specified, then a fresh set of randomness will be used to create the seed.
     *
     * Generated from protobuf field <code>bytes seed_entropy = 2;</code>
     * @return string
     */
    public function getSeedEntropy()
    {
        return $this->seed_entropy;
    }

    /**
     **
     *seed_entropy is an optional 16-bytes generated via CSPRNG. If not
     *specified, then a fresh set of randomness will be used to create the seed.
     *
     * Generated from protobuf field <code>bytes seed_entropy = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setSeedEntropy($var)
    {
        GPBUtil::checkString($var, False);
        $this->seed_entropy = $var;

        return $this;
    }

}

